name: Buildpackage
on:
    release:
        types:
            - published
jobs:
    create-package:
        name: Create Package
        runs-on:
            - ubuntu-latest
        steps:
            - uses: actions/setup-go@v2
              with:
                go-version: "1.15"
            - name: Install crane
              run: |
                #!/usr/bin/env bash
                set -euo pipefail
                GO111MODULE=on go get -u -ldflags="-s -w" github.com/google/go-containerregistry/cmd/crane
            - id: jq
              name: Install jq
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                sudo apt update -y
                sudo apt install jq -y
            - id: pack
              name: Install pack
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                mkdir -p "${HOME}"/bin
                echo "${HOME}/bin" >> "${GITHUB_PATH}"

                curl \
                  --location \
                  --show-error \
                  --silent \
                  "https://github.com/buildpacks/pack/releases/download/v${PACK_VERSION}/pack-v${PACK_VERSION}-linux.tgz" \
                  | tar -C "${HOME}"/bin/ -xzv pack
              env:
                PACK_VERSION: 0.14.1
            - id: yj
              name: Install yj
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                mkdir -p "${HOME}"/bin
                echo "${HOME}/bin" >> "${GITHUB_PATH}"

                curl \
                  --output "${HOME}"/bin/yj \
                  --location \
                  --show-error \
                  --silent \
                  "https://github.com/sclevine/yj/releases/download/v${YJ_VERSION}/yj-linux"

                chmod +x "${HOME}"/bin/yj
              env:
                YJ_VERSION: 5.0.0
            - id: checkout
              name: Checkout code
              uses: actions/checkout@v2
            - id: version
              name: Compute Version
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                VERSION="$(cat buildpack.toml | yj -t | jq -r .buildpack.version)"

                echo "::set-output name=version::${VERSION}"
                echo "Selected version ${VERSION} from buildpack.toml"
            - id: package
              name: Package Buildpack
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                if [[ -n "${PUBLISH+x}" ]]; then
                  pack package-buildpack \
                    "${PACKAGE}:${VERSION}" \
                    --config package.toml \
                    --publish

                  echo "::set-output name=digest::$(crane digest "${PACKAGE}:${VERSION}")"
                else
                  pack package-buildpack \
                    "${PACKAGE}:${VERSION}" \
                    --config package.toml
                fi
              env:
                PACKAGE: ghcr.io/jkutner/minecraft/jkutner_minecraft
                PUBLISH: "true"
                VERSION: ${{ steps.version.outputs.version }}
            - name: Update release with digest
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                PAYLOAD=$(cat "${GITHUB_EVENT_PATH}")

                RELEASE_ID=$(jq -n -r --argjson PAYLOAD "${PAYLOAD}" '$PAYLOAD.release.id')
                RELEASE_TAG_NAME=$(jq -n -r --argjson PAYLOAD "${PAYLOAD}" '$PAYLOAD.release.tag_name')
                RELEASE_NAME=$(jq -n -r --argjson PAYLOAD "${PAYLOAD}" '$PAYLOAD.release.name')
                RELEASE_BODY=$(jq -n -r --argjson PAYLOAD "${PAYLOAD}" '$PAYLOAD.release.body')

                gh api \
                  --method PATCH \
                  "/repos/:owner/:repo/releases/${RELEASE_ID}" \
                  --field "tag_name=${RELEASE_TAG_NAME}" \
                  --field "name=${RELEASE_NAME}" \
                  --field "body=${RELEASE_BODY//<!-- DIGEST PLACEHOLDER -->/\`${DIGEST}\`}"
              env:
                DIGEST: ${{ steps.package.outputs.digest }}
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
